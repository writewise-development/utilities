param (
    [Parameter(Mandatory=$false)]
    [string]$basePath
)
. $PSScriptRoot\GetEnv.ps1
if (-not $basePath) {
    $basePath = Resolve-Path "$PSScriptRoot\..\.."
}
[string]$outputPath=Join-Path -Path $basePath -ChildPath "$($env['HTTP_CERT_PATH'])"
if (-not (Test-Path -Path $outputPath)) {
    try {
        New-Item -ItemType Directory -Path $outputPath -ErrorAction Stop | Out-Null
    }
    catch {
        Write-Host "Error: Invalid basePath: $basePath."
        exit 1
    }
}
$password = [guid]::NewGuid().ToString('N')
dotnet dev-certs https -ep "$outputPath\$($env['HTTP_CERT_FILENAME']).crt" --format pem --trust -np
dotnet dev-certs https -ep "$outputPath\$($env['HTTP_CERT_FILENAME']).pfx" -p "$password"
[datetime]$now=(GET-DATE).ToUniversalTime()
$fileContents = "# This file was generated by ExportCert.ps1 - 1.0.0
Kestrel__Certificates__Default__Password=$password"
$fileContents | Out-File -Encoding utf8 -FilePath "$outputPath\https.env"

Write-Host "Info: Generated Windows host dotnet developer certificates."
Write-Host "Export folder: $outputPath."
